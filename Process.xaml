<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_SimilarityPercentageDT" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1300,2427.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="54">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Sequence to run Git Clone/Git Diff on unique project repository pair RepoA/RepoB and analyze Git Diff output file." DisplayName="Process" sap:VirtualizedContainerService.HintSize="1310,2362.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="RepoAFilePathExists" />
      <Variable x:TypeArguments="x:Boolean" Name="RepoBFilePathExists" />
      <Variable x:TypeArguments="x:String" Name="RepoAFolderName" />
      <Variable x:TypeArguments="x:String" Name="RepoBFolderName" />
      <Variable x:TypeArguments="x:Double" Name="SimilarityPercentage" />
      <Variable x:TypeArguments="x:String" Name="RepoAFullPath" />
      <Variable x:TypeArguments="x:String" Name="RepoBFullPath" />
      <Variable x:TypeArguments="x:String" Name="RepoCloningPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1268,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Running Process.xaml workflow&quot;]" />
    <Assign DisplayName="Assign - RepoA Folder Name" sap:VirtualizedContainerService.HintSize="1268,62" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[RepoAFolderName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Split(in_TransactionItem("RepoA").ToString, "/").Last]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - RepoB Folder Name" sap:VirtualizedContainerService.HintSize="1268,62" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[RepoBFolderName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Split(in_TransactionItem("RepoB").ToString, "/").Last]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - Repo Cloning Path" sap:VirtualizedContainerService.HintSize="1268,62" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[RepoCloningPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("GitCloneRepoFolderPath").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Ensure Repo Cloning Path Exists" sap:VirtualizedContainerService.HintSize="1268,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Components\EnsureTargetFolderExists.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_TargetFolderPath">[RepoCloningPath]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Sequence DisplayName="Clone RepoA/RepoB" sap:VirtualizedContainerService.HintSize="1268,730.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Parallel sap:VirtualizedContainerService.HintSize="1226,638.666666666667" sap2010:WorkflowViewState.IdRef="Parallel_2">
        <Sequence DisplayName="Clone RepoA" sap:VirtualizedContainerService.HintSize="526,592.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign - RepoA Full Path" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[RepoAFullPath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format("{0}\{1}", RepoCloningPath, RepoAFolderName)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:PathExists DisplayName="Path Exists - RepoA Full Path" Exists="[RepoAFilePathExists]" sap:VirtualizedContainerService.HintSize="484,90.6666666666667" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[RepoAFullPath]" PathType="Folder" />
          <If Condition="[RepoAFilePathExists]" sap:VirtualizedContainerService.HintSize="484,268" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Else>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloneRepo workflow" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Components\CloneRepo.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RepoLink">[in_TransactionItem("RepoA").ToString + ".git"]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RepoTargetPath">[in_Config("GitCloneRepoFolderPath").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RepoFolderName">[RepoAFolderName]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </If.Else>
          </If>
        </Sequence>
        <Sequence DisplayName="Clone RepoB" sap:VirtualizedContainerService.HintSize="526,592.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign - RepoB Full Path" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[RepoBFullPath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format("{0}\{1}", RepoCloningPath, RepoBFolderName)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:PathExists DisplayName="Path Exists - RepoB Full Path" Exists="[RepoBFilePathExists]" sap:VirtualizedContainerService.HintSize="484,90.6666666666667" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[RepoBFullPath]" PathType="Folder" />
          <If Condition="[RepoBFilePathExists]" sap:VirtualizedContainerService.HintSize="484,268" sap2010:WorkflowViewState.IdRef="If_4">
            <If.Else>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloneRepo workflow" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Components\CloneRepo.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RepoLink">[in_TransactionItem("RepoB").ToString + ".git"]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RepoTargetPath">[in_Config("GitCloneRepoFolderPath").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RepoFolderName">[RepoBFolderName]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </If.Else>
          </If>
        </Sequence>
      </Parallel>
    </Sequence>
    <Sequence DisplayName="Run Git Diff/Analyze Git Diff of RepoA/RepoB" sap:VirtualizedContainerService.HintSize="1268,812.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="GitDiffOutputPath" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Ensure Git Diff Output Folder Exists" sap:VirtualizedContainerService.HintSize="337.333333333333,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Components\EnsureTargetFolderExists.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_TargetFolderPath">[in_Config("GitDiffOutputFolderPath").ToString()]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Assign DisplayName="Assign - Git Diff Output File Path" sap:VirtualizedContainerService.HintSize="337.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[GitDiffOutputPath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[String.Format("{0}\GitDiff_{1}_{2}.TXT", in_Config("GitDiffOutputFolderPath").ToString(), RepoAFolderName, RepoBFolderName)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PowerShell_RunGitDiff workflow" sap:VirtualizedContainerService.HintSize="337.333333333333,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Components\PowerShell_RunGitDiff.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_GitDiffOutputPath">[GitDiffOutputPath]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_RepoAFullPath">[RepoAFullPath]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_RepoBFullPath">[RepoBFullPath]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke AnalyzeGitDiff workflow" sap:VirtualizedContainerService.HintSize="337.333333333333,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Components\AnalyzeGitDiff.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_RepoAFolderName">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="RepoAFolderName" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_RepoBFolderName">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="RepoBFolderName" />
          </InArgument>
          <OutArgument x:TypeArguments="x:Double" x:Key="out_SimilarityPercentage">
            <mva:VisualBasicReference x:TypeArguments="x:Double" ExpressionText="SimilarityPercentage" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_GitDiffOutputPath">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="GitDiffOutputPath" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_OutputMatrixFilePath">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;OutputMatrixFilePath&quot;).ToString" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete Git Diff Output File" sap:VirtualizedContainerService.HintSize="337.333333333333,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[GitDiffOutputPath]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="337.333333333333,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[String.Format(&quot;Similarity Percentage of Git Diff on {0} against {1}: {2}&quot;, RepoAFolderName, RepoBFolderName, SimilarityPercentage.ToString(&quot;P&quot;))]" />
    </Sequence>
    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_TransactionItem(&quot;RepoA&quot;).ToString, in_TransactionItem(&quot;RepoB&quot;).ToString, SimilarityPercentage}]" DataTable="[io_SimilarityPercentageDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="1268,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
  </Sequence>
</Activity>